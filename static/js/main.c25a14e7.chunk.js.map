{"version":3,"sources":["components/PaginationUl/PaginationUl.tsx","components/pagination/pagination.tsx","App.tsx","index.tsx"],"names":["PaginationUl","props","selectedPage","setselectedPage","totalElements","totalPages","pageArr","Array","i","handleClick","e","target","value","currentTarget","console","log","className","type","classNames","paginationUl__disabele","onClick","map","page","paginationUl__active","Pagination","useState","elementsOnPage","setElementsOnPage","Math","ceil","onChange","event","elem","App","ReactDOM","render","document","getElementById"],"mappings":"mQAWaA,EAAgC,SAACC,GAS5C,IARA,IACEC,EAIED,EAJFC,aACAC,EAGEF,EAHFE,gBACAC,EAEEH,EAFFG,cACAC,EACEJ,EADFI,WAEIC,EAAU,IAAIC,MAAMF,EAAa,GAE9BG,EAAI,EAAGA,EAAIH,EAAYG,GAAK,EACnCF,EAAQE,GAAKA,EAAI,EAGnB,IAAMC,EAAc,SAACC,GACnB,IAAQC,EAAWD,EAAXC,OACAC,EAAUF,EAAEG,cAAZD,MAERT,GAAiBS,GAEjBE,QAAQC,IAAIH,EAAOD,EAAQT,EAAcC,EAAiBC,IAmB5D,OACE,qBAAIY,UAAU,eAAd,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,uBAAwB,CAC5CC,uBAAyC,IAAjBjB,IAE1BkB,QAvBa,WACblB,EAAe,GAGjBC,EAFiBD,EAAe,IAgBhC,oBASCI,EAAQe,KAAI,SAAAC,GAAI,OACf,wBACEN,UAAWE,IAAW,uBAAwB,CAC5CK,qBAAsBD,IAASpB,IAEjCe,KAAK,SAELL,MAAOU,EACPF,QAASX,EAPX,SASGa,GAJIA,MAOT,wBACEL,KAAK,SACLD,UAAWE,IAAW,uBAAwB,CAC5CC,uBAAwBjB,IAAiBG,IAE3Ce,QArCa,WACblB,EAAeG,GAGjBF,EAFiBD,EAAe,IA8BhC,wBCpEOsB,G,MAAuB,WAClC,IAAMpB,EAAgB,GAEtB,EAA4CqB,mBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOvB,EAAP,KAAqBC,EAArB,KACME,EAAauB,KAAKC,KAAKzB,EAAgBsB,GAG7CZ,QAAQC,IAAIX,EAAesB,EAAgBrB,EAAYF,GAOvD,OACE,sBAAKa,UAAU,aAAf,UAEE,oBAAGA,UAAU,mBAAb,UACGU,EAAiBxB,GACdwB,EAAiB,GACpB,MACCtB,EAAgBsB,EAAiBxB,EAC/BE,EAAgBsB,EAAiBxB,EALvC,cAMUE,MAEV,cAAC,EAAD,CACEF,aAAcA,EACdC,gBAAiBA,EACjBC,cAAeA,EACfC,WAAYA,IAEd,6DACA,wBACEW,UAAU,qBACVJ,MAAOc,EACPI,SA1BJ,SAACC,GACDJ,GAAmBI,EAAMpB,OAAOC,OAChCT,EAAgB,IAqBd,SA/BuB,CAAC,EAAG,EAAG,GAAI,IAoCZkB,KAAI,SAAAW,GAAI,OAC1B,wBAAmBpB,MAAOoB,EAA1B,SAAiCA,GAApBA,aCjCRC,EAPO,kBACpB,sBAAKjB,UAAU,MAAf,UACE,4CACA,cAAC,EAAD,QCJJkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c25a14e7.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './PaginationUl.scss';\n\ntype Props = {\n  selectedPage: number,\n  setselectedPage: (num: number) => void,\n  totalElements: number,\n  totalPages: number,\n};\n\nexport const PaginationUl: React.FC<Props> = (props) => {\n  const {\n    selectedPage,\n    setselectedPage,\n    totalElements,\n    totalPages,\n  } = props;\n  const pageArr = new Array(totalPages - 1);\n\n  for (let i = 0; i < totalPages; i += 1) {\n    pageArr[i] = i + 1;\n  }\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const { target } = e;\n    const { value } = e.currentTarget;\n\n    setselectedPage(+value);\n    // eslint-disable-next-line no-console\n    console.log(value, target, selectedPage, setselectedPage, totalElements);\n  };\n\n  const handlePrev = () => {\n    if (selectedPage > 1) {\n      const nextPage = selectedPage - 1;\n\n      setselectedPage(nextPage);\n    }\n  };\n\n  const handleNext = () => {\n    if (selectedPage < totalPages) {\n      const nextPage = selectedPage + 1;\n\n      setselectedPage(nextPage);\n    }\n  };\n\n  return (\n    <ul className=\"paginationUl\">\n      <button\n        type=\"button\"\n        className={classNames('paginationUl__button', {\n          paginationUl__disabele: selectedPage === 1,\n        })}\n        onClick={handlePrev}\n      >\n        &lArr;\n      </button>\n      {pageArr.map(page => (\n        <button\n          className={classNames('paginationUl__button', {\n            paginationUl__active: page === selectedPage,\n          })}\n          type=\"button\"\n          key={page}\n          value={page}\n          onClick={handleClick}\n        >\n          {page}\n        </button>\n      ))}\n      <button\n        type=\"button\"\n        className={classNames('paginationUl__button', {\n          paginationUl__disabele: selectedPage === totalPages,\n        })}\n        onClick={handleNext}\n      >\n        &rArr;\n      </button>\n    </ul>\n  );\n};\n","// import React from 'react';\nimport React, { useState } from 'react';\nimport { PaginationUl } from '../PaginationUl/PaginationUl';\nimport './pagination.scss';\n\nexport const Pagination: React.FC = () => {\n  const totalElements = 42;\n  const varElementsPerPage = [3, 5, 10, 20];\n  const [elementsOnPage, setElementsOnPage] = useState(5);\n  const [selectedPage, setselectedPage] = useState(1);\n  const totalPages = Math.ceil(totalElements / elementsOnPage);\n\n  // eslint-disable-next-line no-console\n  console.log(totalElements, elementsOnPage, totalPages, setselectedPage);\n  const handlElementsPerPageChange\n  = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setElementsOnPage(+event.target.value);\n    setselectedPage(1);\n  };\n\n  return (\n    <div className=\"pagination\">\n      {/* <h1>Pagination111</h1> */}\n      <p className=\"pagination__text\">\n        {elementsOnPage * selectedPage\n         - (elementsOnPage - 1)}\n        {' - '}\n        { totalElements < elementsOnPage * selectedPage\n          ? totalElements : elementsOnPage * selectedPage}\n        {` of ${totalElements}`}\n      </p>\n      <PaginationUl\n        selectedPage={selectedPage}\n        setselectedPage={setselectedPage}\n        totalElements={totalElements}\n        totalPages={totalPages}\n      />\n      <h3>Amount of elements per Page</h3>\n      <select\n        className=\"pagination__select\"\n        value={elementsOnPage}\n        onChange={handlElementsPerPageChange}\n      >\n        {varElementsPerPage.map(elem => (\n          <option key={elem} value={elem}>{elem}</option>))}\n      </select>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Pagination } from './components/pagination/pagination';\n\nconst App: React.FC = () => (\n  <div className=\"app\">\n    <h1>Pagination</h1>\n    <Pagination />\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}